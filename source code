import java.util.Scanner;
public class EcommerceSystem{
    public static void main(String[] args){

        Scanner input = new Scanner(System.in);

        ElectronicProduct elc = new ElectronicProduct(1,"smartphone",599.9f,"Samsung",1);
        ClothingProduct clo = new ClothingProduct(2,"T-shirt",19.99f,"Medium","Cotton");
        BookProduct book = new BookProduct(3,"OOP",39.99f,"O’Reilly","X Publications");

        System.out.println("Welcome to the E-commerce System!");
        System.out.println("Entre your ID");
        int id = input.nextInt();
        input.nextLine();
        System.out.println("Entre your name");
        String name = input.nextLine();
        System.out.println("Entre your address");
        String address = input.nextLine();
        Customer customer = new Customer(id,name,address);

        System.out.println("How many Products do you want to add to your cart");
        int size = input.nextInt();
        Cart cart = new Cart(customer.getCustomerId(),size);
        for (int i = 0; i <size;i++) {
            System.out.println("Which product do you want to add? 1- Smartphone 2- T-shirt 3- OOP");
            int productid = input.nextInt();
            Product product;
            switch(productid){
                case 1:
                    product = new ElectronicProduct(1, "Smartphone", 599.9f, "Samsung", 1);
                    break;
                case 2:
                    product = new ClothingProduct(2,"T-shirt",19.99f,"Medium","Cotton");
                    break;
                case 3:
                    product = new BookProduct(3,"OOP",39.99f,"O’Reilly","X Publications");
                    break;
                default:
                    System.out.println("error, try again");
                    i--;
                    continue;
            }   cart.addProduct(product,i);
        }
        System.out.println("Your total is " + cart.calculatePrice() + ". Would you like to place your order? 1- Yes 2- No");
        int choice = input.nextInt();
        if (choice ==1){
            System.out.println("Here is your order summary");
            Order odr = new Order(id,1, cart.getProducts(), (float)cart.calculatePrice());
            odr.printOrderInfo();
        }
    }
}
 class Product {
     int productId;
     String name;
     float price;

    public Product(int productId, String name, float price) {
        this.productId = Math.abs(productId);
        this.name = name;
        this.price = Math.abs(price);
    }

    public int getProductId() {
        return productId;
    }

    public void setProductId(int productId) {
        this.productId = Math.abs(productId);
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public float getPrice() {
        return price;
    }

    public void setPrice(float price) {
        this.price = Math.abs(price);
    }
} class ElectronicProduct extends Product{
     String brand;
     int warrantyPeriod;

    public ElectronicProduct(int productId, String name, float price, String brand, int warrantyPeriod) {
        super(productId, name, price);
        this.brand = brand;
        this.warrantyPeriod = Math.abs(warrantyPeriod);
    }

    public String getBrand() {
        return brand;
    }

    public void setBrand(String brand) {
        this.brand = brand;
    }

    public int getWarrantyPeriod() {
        return warrantyPeriod;
    }

    public void setWarrantyPeriod(int warrantyPeriod) {
        this.warrantyPeriod = Math.abs(warrantyPeriod);
    }
} class ClothingProduct extends Product {
     String size;
     String fabric;

    public ClothingProduct(int productId, String name, float price, String size, String fabric) {
        super(productId, name, price);
        this.size = size;
        this.fabric = fabric;
    }

    public String getSize() {
        return size;
    }

    public void setSize(String size) {
        this.size = size;
    }

    public String getFabric() {
        return fabric;
    }

    public void setFabric(String fabric) {
        this.fabric = fabric;
    }
} class BookProduct extends Product{
     String author;
     String publisher;

    public BookProduct(int productId, String name, float price, String author, String publisher) {
        super(productId, name, price);
        this.author = author;
        this.publisher = publisher;
    }

    public String getAuthor() {
        return author;
    }

    public void setAuthor(String author) {
        this.author = author;
    }

    public String getPublisher() {
        return publisher;
    }

    public void setPublisher(String publisher) {
        this.publisher = publisher;
    }
} class Customer {
     int customerId;
     String name;
     String address;

    public Customer(int customerId, String name, String address) {
        this.customerId = Math.abs(customerId);
        this.name = name;
        this.address = address;
    }

    public int getCustomerId() {
        return customerId;
    }

    public void setCustomerId(int customerId) {
        this.customerId = customerId;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getAddress() {
        return address;
    }

    public void setAddress(String address) {
        this.address = address;
    }
} class Cart{
     int customerId;
     int nProducts;
     Product[] products;

    public Cart(int customerId, int nProducts) {
        this.customerId = Math.abs(customerId);
        this.nProducts = Math.abs(nProducts);
        this.products = new Product[nProducts];
    }

    public int getCustomerId() {
        return customerId;
    }

    public void setCustomerId(int customerId) {
        this.customerId = Math.abs(customerId);
    }

    public int getNProducts() {
        return nProducts;
    }

    public void setNProducts(int nProducts) {
        this.nProducts = Math.abs(nProducts);
    }

    public Product[] getProducts() {
        return products;
    }

    public void addProduct(Product product, int x) {
        if (x >= 0 && x < nProducts) {
            products[x] = product;
        } else {
            System.out.println("wrong size");
        }
    }

    public void removeProduct(int x) {
        if (x >= 0 && x < nProducts) {
            products[x] = null;
        } else {
            System.out.println("wrong size");
        }
    }
    public double calculatePrice() {
        double totalPrice = 0;
        for (int i=0;i <nProducts;i++) {
            if (products[i] != null) {
                totalPrice += products[i].getPrice();
            }
        }
        return totalPrice;
    }
}class Order {
     int customerId;
     int orderId;
     Product[] products;
     float totalPrice;

    public Order(int customerId, int orderId, Product[] products, float totalPrice) {
        this.customerId = Math.abs(customerId);
        this.orderId = Math.abs(orderId);
        this.products = products;
        this.totalPrice = Math.abs(totalPrice);
    }
    public void printOrderInfo(){
        System.out.println("Customer Id is " + customerId + ", Order Id is " + orderId);
        for (int i = 0;i<products.length;i++){
            System.out.println("Product number "+i+ " is "+products[i]);
        }
        System.out.println("Total price is " +totalPrice);
    }
}
